@page "/computadoras-editar/{Almacenamiento}"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager

<h3>Computadoras</h3>

<EditForm Model="@computadora" OnValidSubmit="@Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="NumSerie">Numero de Serie</label>
        <InputText id="NumSerie" @bind-Value="computadora.NumSerie" class="form-control" />
        <ValidationMessage For="() => computadora.NumSerie" />
    </div>
    <div class="form-group">
        <label for="Modelo">Modelo</label>
        <InputText id="Modelo" @bind-Value="computadora.Modelo" class="form-control" />
        <ValidationMessage For="() => computadora.Modelo" />
    </div>
    <div class="form-group">
        <label for="Marca">Marca</label>
        <InputText id="Marca" @bind-Value="computadora.Marca" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Almacenamiento">Almacenamiento</label>
        <InputText id="Almacenamiento" @bind-Value="computadora.Almacenamiento" class="form-control" />
    </div>
    <div class="form-group">
        <label for="Ram">Numero de Ejemplar</label>
        <InputText id="Ram" @bind-Value="computadora.Ram" class="form-control" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Guardar Cambios</button>
    </div>
</EditForm>
@code {

    [Parameter]
    public string Almacenamiento { get; set; }

    private Computadoras computadora = new Computadoras();
    List<Computadoras> computadoras = new List<Computadoras>();


    protected async Task Guardar()
    {
        await localStorage.SetItemAsync("computadoras", computadoras);

        //Al finalizar de guardar regresamos al formulario original
        NavigationManager.NavigateTo("/computadoras-crear");

    }

    protected override async Task OnInitializedAsync()
    {   //Cargar todos los libros guardados
        computadoras = await localStorage.GetItemAsync<List<Computadoras>>("computadoras");


        if (computadora == null)
            computadoras = new List<Computadoras>();

        computadora = computadoras.Find(c => c.Almacenamiento == Almacenamiento);
    }

}